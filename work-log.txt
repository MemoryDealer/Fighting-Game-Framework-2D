#3/17/14
-The main must have parameters argc and argv for SDL to link properly, not sure if calling main SDL_main is necessary. 
-Got textures loaded; SDL_Texture stores the texture in memory, SDL_RenderCopy() renders the texture and allows specification of 
	coordinates, SDL_QueryTexture() gets a texture's width and height, SDL_RenderPresent() flips the screen, if I understand correctly. 
-SDL_Texture's should be destroyed with SDL_DestroyTexture(),
	same goes for the renderer, and window. 
-Added SDL_image extension, several DLL files are needed (five) for it to work with the executable. 
-Calling IMG_Init() will preload the library to later prevent performance hiccups when using it. 
-Added SDL_ttf library to load true type fonts. 


#3/18/14
-Created git repo and project files. Started building app framework:
	-Log
	-Singleton
	-Engine
	-App, AppStateManager
	-MenuState
-I am using "pointer to implementation" for most classes. 

#3/19/14
-Added Object class, the Engine class now accepts an Object for rendering. 
-Added correct frame time calculations in AppStateManager::start(), although it results in 0.0 per frame with vsync disabled. 

#3/20/14
-Derived Player from Object, along with PlayerImpl from PlayerObject. 
-At first the Player class wouldn't render, until I overrided the getTexturePtr() function. 
	Never mind that, since I redeclared m_pImpl in Player, there were two smart pointers allocated separately. I've removed the allocation in Object and
	added the function Object::setPImpl() which should be called from a derived class. It passes the local private m_pImpl from the child class to the base 
	class and thus the base class m_pImpl points to the child class's m_pImpl. 

#3/24/14
-Added SDLNet in Engine. 
-Added Background object. 
-Getting strange linker error: "Background.obj : error LNK2019: unresolved external symbol "public: __thiscall BackgroundImpl::BackgroundImpl(char const *)" (??0BackgroundImpl@@QAE@PBD@Z) referenced in function "public: __thiscall Background::Background(char const *)" (??0Background@@QAE@PBD@Z)"
	There is also a prior warning: "Debug\BackgroundImpl.obj : warning LNK4042: object specified more than once; extras ignored"
	-Turns out it was a problem with the project file, due to accidently adding BackgroundImpl.cpp in the headers section and changing it to BackgroundImpl.hpp afterwards. There was something in the project file that was confusing the linker, so I just deleted BackgroundImpl.hpp and re-added it properly. 


#TODO
-Should each state have its own SDL_Renderer? Or is using one for all sufficient?
-Create Hitbox, Rect? 
-ObjectManager 
-Make Object abstract, derive TestSprite and Background 
-Fix frame time when vsync is off